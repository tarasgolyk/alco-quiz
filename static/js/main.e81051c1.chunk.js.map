{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","Center","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","fecthQuizesError","e","error","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","round","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","event","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e81051c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3WV5Q\",\"close\":\"Drawer_close__FgRyV\",\"active\":\"Drawer_active__2Haj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__AIkav\",\"open\":\"MenuToggle_open__3_AbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2xU7y\",\"QuizWrapper\":\"Quiz_QuizWrapper__D99k3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__32abf\",\"Question\":\"ActiveQuiz_Question__3xY4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3NEgU\",\"success\":\"AnswerItem_success__1OePf\",\"error\":\"AnswerItem_error__2niIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__25EXn\",\"success\":\"FinishedQuiz_success__1WRzp\",\"error\":\"FinishedQuiz_error__1wK5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3LxEc\",\"error\":\"Button_error__1Jg-d\",\"success\":\"Button_success__2KFSC\",\"primary\":\"Button_primary__3lGPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2fsxC\",\"Loader1\":\"Loader_Loader1___AlSH\",\"Loader2\":\"Loader_Loader2__1aZ4V\",\"Loader3\":\"Loader_Loader3__1S0jw\",\"Center\":\"Loader_Center__20mM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2aTLb\",\"AuthForm\":\"Auth_AuthForm__348Kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1-O39\",\"invalid\":\"Input_invalid__bfcLo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2JdWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1hDik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1vEAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__iOiIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2pOUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__3SJJn\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n  const cls = [\r\n    classes.MenuToggle,\r\n    'fa'\r\n  ]\r\n\r\n  if (props.isOpen) {\r\n    cls.push('fa-times')\r\n    cls.push(classes.open)\r\n  } else {\r\n    cls.push('fa-bars')\r\n  }\r\n\r\n  return (\r\n    <i\r\n      className={cls.join(' ')}\r\n      onClick={props.onToggle}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>\r\n\r\nexport default Backdrop","import React, {Component} from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\n\r\nclass Drawer extends Component {\r\n\r\n  clickHandler = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  renderLinks(links) {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName={classes.active}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const cls = [classes.Drawer]\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(classes.close)\r\n    }\r\n\r\n    const links = [\r\n      {to: '/', label: 'List', exact: true},\r\n    ]\r\n\r\n    if (this.props.isAuthenticated) {\r\n      links.push({to: '/quiz-creator', label: 'Create quiz', exact: false})\r\n      links.push({to: '/logout', label: 'Logout', exact: false})\r\n    } else {\r\n      links.push({to: '/auth', label: 'Auth', exact: false})\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <nav className={cls.join(' ')}>\r\n        <ul>\r\n          { this.renderLinks(links) }\r\n        </ul>\r\n      </nav>\r\n        { this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react'\nimport classes from './Layout.module.css'\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\nimport {connect} from 'react-redux'\n\nclass Layout extends Component {\n\n  state = {\n    menu: false\n  }\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    })\n  }\n\n  menuCloseHandler = () => {\n    this.setState({\n      menu: false\n    })\n  }\n\n  render() {\n      return (\n          <div className={classes.Layout}>\n\n            <Drawer\n              isOpen={this.state.menu}\n              onClose={this.menuCloseHandler}\n              isAuthenticated={this.props.isAuthenticated}\n            />\n\n            <MenuToggle\n              onToggle={this.toggleMenuHandler}\n              isOpen={this.state.menu}\n            />\n\n            <main>{this.props.children}</main>\n          </div>\n      )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nexport default connect(mapStateToProps)(Layout)","import React from 'react'\nimport classes from './AnswerItem.module.css'\n\nconst AnswerItem = props => {\n   const cls = [classes.AnswerItem]\n\n   if (props.state) {\n      cls.push(classes[props.state])\n   }\n\n   return (\n      <li\n         className={cls.join(' ')}\n         onClick={() => props.onAnswerClick(props.answer.id)}\n      >\n         { props.answer.text }\n      </li>\n   )\n}\n\nexport default AnswerItem","import React from 'react'\nimport classes from './AnswersList.module.css'\nimport AnswerItem from './AnswerItem/AnswerItem'\n\nconst AnswersList = props => (\n   <ul className={classes.AnswersList}>\n      { props.answers.map((answer, index) => {\n         return (\n            <AnswerItem\n              key={index}\n              answer={answer}\n              onAnswerClick={props.onAnswerClick}\n              state={props.state ? props.state[answer.id] : null}\n            />\n         )\n      })}\n   </ul>\n)\n\nexport default AnswersList","import React from 'react'\nimport classes from './ActiveQuiz.module.css'\nimport AnswersList from './AnswersList/AnswersList'\n\nconst ActiveQuiz = props => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n            <span>\n                <strong>{ props.answerNumber }.</strong>&nbsp;\n                { props.question }\n            </span>\n\n            <small>{ props.answerNumber } з { props.quizLength}</small>\n        </p>\n\n        <AnswersList\n          state={props.state}\n           answers={props.answers}\n           onAnswerClick={props.onAnswerClick}\n        />\n    </div>\n)\n\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n  const cls = [\r\n     classes.Button,\r\n     classes[props.type]\r\n  ]\r\n\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(' ')}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FinishedQuiz = props => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === 'success') {\r\n      total++\r\n    }\r\n\r\n    return total\r\n  }, 0)\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n        { props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            classes[props.results[quizItem.id]]\r\n          ]\r\n\r\n          return (\r\n            <li\r\n              key={index}\r\n            >\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(' ')} />\r\n            </li>\r\n          )\r\n        }) }\r\n      </ul>\r\n\r\n      <p>Правильно {successCount} з {props.quiz.length}</p>\r\n      <div>\r\n        <Button onClick={props.onRetry} type='primary'>Повторити</Button>\r\n        <Link to='/'>\r\n          <Button type='success'>До списку тестів</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => (\r\n  <div className={classes.Center}>\r\n    <div className={classes.Loader}>\r\n      <div /><div /><div /><div />\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://react-quiz-1d82e.firebaseio.com/'\r\n})","import axios from '../../axios/axios-quiz'\r\nimport {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_SET_STATE,\r\n  QUIZ_RETRY\r\n} from './actionTypes'\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n    try {\r\n      const response = await axios.get('/quizes.json')\r\n\r\n      const quizes = []\r\n\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Test #${index + 1}`\r\n        })\r\n      })\r\n\r\n      dispatch(fetchQuizesSuccess(quizes))\r\n    } catch (e) {\r\n      dispatch(fecthQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizByID(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n\r\n    try {\r\n      const response = await axios.get(`/quizes/${quizId}.json`)\r\n      const quiz = response.data\r\n\r\n      dispatch(fetchQuizSuccess(quiz))\r\n    } catch (e) {\r\n      dispatch(fecthQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: FETCH_QUIZ_SUCCESS,\r\n    quiz\r\n  }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START\r\n  }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    quizes\r\n  }\r\n}\r\n\r\nexport function fecthQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    error: e\r\n  }\r\n}\r\n\r\n\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState, results\r\n  }\r\n}\r\n\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ,\r\n  }\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    number\r\n  }\r\n}\r\n\r\nexport function retryQuiz() {\r\n  return {\r\n    type: QUIZ_RETRY\r\n  }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz\r\n\r\n    if (state.answerState) {\r\n      const key = Object.keys(state.answerState)[0]\r\n      if (state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion]\r\n    const results = state.results\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      dispatch(quizSetState({ [answerId]: 'success' }, results))\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (isQuizFinished(state)) {\r\n          dispatch(finishQuiz())\r\n        } else {\r\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n        }\r\n\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n\r\n    } else {\r\n      results[question.id] = 'error'\r\n      dispatch(quizSetState({ [answerId]: 'error' }, results))\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React, {Component} from 'react'\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport Loader from '../../components/UI/Loader/Loader'\nimport {connect} from 'react-redux'\nimport {fetchQuizByID, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\n\nclass Quiz extends Component {\n\n  componentDidMount() {\n    this.props.fetchQuizById(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.retryQuiz()\n  }\n\n  render() {\n        return(\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Lets quiz</h1>\n\n                  {\n                    this.props.loading || !this.props.quiz\n                    ? <Loader/>\n                    : this.props.isFinished\n                      ?  <FinishedQuiz\n                        results={this.props.results}\n                        quiz={this.props.quiz}\n                        onRetry={this.props.retryQuiz}\n                      />\n                      :  <ActiveQuiz\n                        answers={this.props.quiz[this.props.activeQuestion].answers}\n                        question={this.props.quiz[this.props.activeQuestion].question}\n                        onAnswerClick={this.props.quizAnswerClick}\n                        quizLength={this.props.quiz.length}\n                        answerNumber={this.props.activeQuestion + 1}\n                        state={this.props.answerState}\n                      />\n\n                  }\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizById: id => dispatch(fetchQuizByID(id)),\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n    retryQuiz: () => dispatch(retryQuiz())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react'\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\n\r\nclass QuizList extends Component {\r\n\r\n  renderQuizes() {\r\n    return this.props.quizes.map(quiz => {\r\n      return (\r\n        <li\r\n          key={quiz.id}\r\n        >\r\n           <NavLink to={'/quiz/' + quiz.id}>\r\n             {quiz.name}\r\n           </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizes()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizList}>\r\n        <div>\r\n          <h1>Quiz List</h1>\r\n          {\r\n            this.props.loading && this.props.quizes.length !== 0\r\n            ? <Loader/>\r\n            : <ul>\r\n                { this.renderQuizes() }\r\n              </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quizes: state.quiz.quizes,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizes: () => dispatch(fetchQuizes())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n  return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n  const inputType = props.type || 'text'\r\n  const cls = [classes.Input]\r\n  const htmlFor = `${inputType}-${Math.round(Math.random()*1000)}`\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push(classes.invalid)\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n\r\n      {\r\n          isInvalid(props)\r\n          ? <span>{props.errorMessage || 'Enter a corret value'}</span>\r\n          : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import axios from 'axios'\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from './actionTypes'\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async dispatch => {\r\n    const authData = {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBLgMRPp3atBguyfr4yTG_l39b8KRTmw2A'\r\n\r\n    if (isLogin) {\r\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBLgMRPp3atBguyfr4yTG_l39b8KRTmw2A'\r\n    }\r\n\r\n    const response = await axios.post(url, authData)\r\n    const data = response.data\r\n\r\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n    localStorage.setItem('token', data.idToken)\r\n    localStorage.setItem('userId', data.localId)\r\n    localStorage.setItem('expirationDate', expirationDate)\r\n\r\n    dispatch(authSuccess(data.idToken))\r\n    dispatch(autoLogout(data.expiresIn))\r\n  }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout())\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('token')\r\n  localStorage.removeItem('userId')\r\n  localStorage.removeItem('expirationDate')\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      dispatch(logout())\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout())\r\n      } else {\r\n        dispatch(authSuccess(token))\r\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime) / 1000))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport is from 'is_js'\r\nimport {connect} from 'react-redux'\r\nimport {auth} from '../../store/actions/auth'\r\n\r\nclass Auth extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Enter a correct email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Password',\r\n        errorMessage: 'Enter a correct password',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loginHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      true\r\n    )\r\n  }\r\n\r\n  registerHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      false\r\n    )\r\n  }\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  onChangeHandler = (e, controlName) => {\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.value = e.target.value\r\n    control.touched = true\r\n    control.valid = this.validateControl(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    let isFormValid = true\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid\r\n    })\r\n\r\n    this.setState({\r\n      formControls, isFormValid\r\n    })\r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      return (\r\n        <Input\r\n           key={controlName + index}\r\n           type={control.type}\r\n           value={control.value}\r\n           valid={control.valid}\r\n           touched={control.touched}\r\n           label={control.label}\r\n           shouldValidate={!!control.validation}\r\n           errorMessage={control.errorMessage}\r\n           onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Authorization</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n            { this.renderInputs() }\r\n\r\n            <Button\r\n              type='success'\r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >Log In</Button>\r\n            <Button\r\n              type='primary'\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >Sign up</Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","import React from 'react'\r\nimport classes from'./Select.module.css'\r\n\r\nconst Select = props => {\r\n  const htmlFor = `${props.label}-${Math.random()}`\r\n  return (\r\n    <div className={classes.Select}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <select\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      >\r\n        { props.options.map((option, index) => {\r\n          return (\r\n            <option\r\n              value={option.value}\r\n              key={option.value + index}\r\n            >\r\n              {option.text}\r\n            </option>\r\n          )\r\n        }) }\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select","export function createControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: ''\r\n  }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n  if (!validation) {\r\n    return true\r\n  }\r\n\r\n  let isValid = true\r\n\r\n  if (validation.required) {\r\n    isValid = value.trim() !== '' && isValid\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n  let isFormValid = true\r\n\r\n  for (let control in formControls) {\r\n    if (formControls.hasOwnProperty(control)) {\r\n      isFormValid = formControls[control].valid && isFormValid\r\n    }\r\n  }\r\n\r\n  return isFormValid\r\n}","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary","import React, {Component} from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport {connect} from 'react-redux'\r\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create'\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Variant ${number}`,\r\n    errorMessage: 'Value cannot be empty',\r\n    id: number\r\n  }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Enter question',\r\n      errorMessage: 'The question cannot be empty'\r\n    }, {required: true}),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = event => {\r\n    event.preventDefault()\r\n\r\n    const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {text: option1.value, id: option1.id},\r\n        {text: option2.value, id: option2.id},\r\n        {text: option3.value, id: option3.id},\r\n        {text: option4.value, id: option4.id}\r\n      ]\r\n    }\r\n\r\n    this.props.createQuizQuestion(questionItem)\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler = event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n    this.props.finishCreateQuiz()\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.touched = true\r\n    control.value = value\r\n    control.valid = validate(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    })\r\n\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          { index === 0 ? <hr /> : null }\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n   this.setState({\r\n     rightAnswerId: +event.target.value\r\n   })\r\n  }\r\n\r\n  render() {\r\n    const select = <Select\r\n        label={'Choose the correct answer'}\r\n        value={this.state.rightAnswerId}\r\n        onChange={this.selectChangeHandler}\r\n        options={[\r\n          {text: 1, value: 1},\r\n          {text: 2, value: 2},\r\n          {text: 3, value: 3},\r\n          {text: 4, value: 4},\r\n        ]}\r\n    />\r\n\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Quiz Creator</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            { this.renderControls() }\r\n\r\n            {select}\r\n\r\n            <Button\r\n              type='primary'\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Add question\r\n            </Button>\r\n            <Button\r\n              type='success'\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.props.quiz.length === 0}\r\n            >\r\n              Create a test\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.create.quiz\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n     createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n     finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from './actionTypes'\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nexport function createQuizQuestion(item) {\r\n  return {\r\n    type: CREATE_QUIZ_QUESTION,\r\n    item\r\n  }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n  return {\r\n    type: RESET_QUIZ_CREATION\r\n  }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n  return async (dispatch, getState)  => {\r\n    await axios.post('/quizes.json', getState().create.quiz)\r\n    dispatch(resetQuizCreation())\r\n  }\r\n}","import React, {Component}  from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../store/actions/auth'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.logout()\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to={'/'} />\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {Component} from 'react'\nimport Layout from \"./hoc/Layout/Layout\"\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport Quiz from './containers/Quiz/Quiz'\nimport QuizList from './containers/QuizList/QuizList'\nimport Auth from './containers/Auth/Auth'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport {connect} from 'react-redux'\nimport Logout from './components/Logout/Logout'\nimport {autoLogin} from './store/actions/auth'\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth} />\n        <Route path='/quiz/:id' component={Quiz} />\n        <Route path='/' exact component={QuizList} />\n        <Redirect to={'/'} />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/quiz-creator' component={QuizCreator} />\n          <Route path='/quiz/:id' component={Quiz} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/' exact component={QuizList} />\n          <Redirect to={'/'} />\n        </Switch>\n      )\n    }\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProp)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_SET_STATE,\r\n  QUIZ_RETRY\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null,\r\n  results: {},\r\n  isFinished: false,\r\n  activeQuestion: 0,\r\n  answerState: null,\r\n  quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUIZES_START:\r\n      return {\r\n        ...state, loading: true\r\n      }\r\n    case FETCH_QUIZES_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quizes: action.quizes\r\n      }\r\n    case FETCH_QUIZES_ERROR:\r\n      return {\r\n        ...state, loading: false, error: action.error\r\n      }\r\n    case FETCH_QUIZ_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quiz: action.quiz\r\n      }\r\n    case QUIZ_SET_STATE:\r\n      return {\r\n        ...state, answerState: action.answerState, results: action.results\r\n      }\r\n    case FINISH_QUIZ:\r\n      return {\r\n        ...state, isFinished: true\r\n      }\r\n    case QUIZ_NEXT_QUESTION:\r\n      return {\r\n        ...state, answerState: null, activeQuestion: action.number\r\n      }\r\n    case QUIZ_RETRY:\r\n      return {\r\n        ...state,\r\n        results: {},\r\n        isFinished: false,\r\n        activeQuestion: 0,\r\n        answerState: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_QUIZ_QUESTION:\r\n      return {\r\n        ...state,\r\n        quiz: [...state.quiz, action.item]\r\n      }\r\n    case RESET_QUIZ_CREATION:\r\n      return {\r\n        ...state, quiz: []\r\n      }\r\n    default: return state\r\n  }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state, token: action.token\r\n      }\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state, token: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from './create'\r\nimport authReducer from './auth'\r\n\r\nexport default  combineReducers({\r\n  quiz: quizReducer,\r\n  create: createReducer,\r\n  auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}