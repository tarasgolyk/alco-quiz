{"version":3,"sources":["containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","classes","this","props","children","Component","AnswerItem","cls","state","push","join","onClick","onAnswerClick","answer","id","text","AnswersList","answers","map","index","key","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","setState","timeout","window","setTimeout","isQuizFinished","console","log","clearTimeout","retryHandler","QuizWrapper","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.83ab58fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2xU7y\",\"QuizWrapper\":\"Quiz_QuizWrapper__D99k3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__32abf\",\"Question\":\"ActiveQuiz_Question__3xY4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3NEgU\",\"success\":\"AnswerItem_success__1OePf\",\"error\":\"AnswerItem_error__2niIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__25EXn\",\"success\":\"FinishedQuiz_success__1WRzp\",\"error\":\"FinishedQuiz_error__1wK5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3LxEc\",\"error\":\"Button_error__1Jg-d\",\"success\":\"Button_success__2KFSC\",\"primary\":\"Button_primary__3lGPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2JdWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1vEAO\"};","import React, {Component} from 'react'\nimport classes from './Layout.module.css'\n\nclass Layout extends Component {\n  render() {\n      return (\n          <div className={classes.Layout}>\n              <main>{this.props.children}</main>\n          </div>\n      )\n  }\n}\n\nexport default Layout","import React from 'react'\nimport classes from './AnswerItem.module.css'\n\nconst AnswerItem = props => {\n   const cls = [classes.AnswerItem]\n\n   if (props.state) {\n      cls.push(classes[props.state])\n   }\n\n   return (\n      <li\n         className={cls.join(' ')}\n         onClick={() => props.onAnswerClick(props.answer.id)}\n      >\n         { props.answer.text }\n      </li>\n   )\n}\n\nexport default AnswerItem","import React from 'react'\nimport classes from './AnswersList.module.css'\nimport AnswerItem from './AnswerItem/AnswerItem'\n\nconst AnswersList = props => (\n   <ul className={classes.AnswersList}>\n      { props.answers.map((answer, index) => {\n         return (\n            <AnswerItem\n              key={index}\n              answer={answer}\n              onAnswerClick={props.onAnswerClick}\n              state={props.state ? props.state[answer.id] : null}\n            />\n         )\n      })}\n   </ul>\n)\n\nexport default AnswersList","import React from 'react'\nimport classes from './ActiveQuiz.module.css'\nimport AnswersList from './AnswersList/AnswersList'\n\nconst ActiveQuiz = props => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n            <span>\n                <strong>{ props.answerNumber }.</strong>&nbsp;\n                { props.question }\n            </span>\n\n            <small>{ props.answerNumber } ли { props.quizLength}</small>\n        </p>\n\n        <AnswersList\n          state={props.state}\n           answers={props.answers}\n           onAnswerClick={props.onAnswerClick}\n        />\n    </div>\n)\n\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n  const cls = [\r\n     classes.Button,\r\n     classes[props.type]\r\n  ]\r\n\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(' ')}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\n\r\nconst FinishedQuiz = props => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === 'success') {\r\n      total++\r\n    }\r\n\r\n    return total\r\n  }, 0)\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n        { props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            classes[props.results[quizItem.id]]\r\n          ]\r\n\r\n          return (\r\n            <li\r\n              key={index}\r\n            >\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(' ')} />\r\n            </li>\r\n          )\r\n        }) }\r\n      </ul>\r\n\r\n      <p>лЪЛђл░л▓лИл╗ЛїлйлЙ {successCount} ли {props.quiz.length}</p>\r\n      <div>\r\n        <Button onClick={props.onRetry} type='primary'>лЪлЙл▓ЛѓлЙЛђлИЛѓлИ</Button>\r\n        <Button type='success'>лћлЙ ЛЂл┐лИЛЂл║ЛЃ ЛѓлхЛЂЛѓЛќл▓</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz","import React, {Component} from 'react'\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\n\nclass Quiz extends Component {\n    state = {\n      results: {},\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      quiz: [\n        {\n          question: 'лЮл░л╣л┐лЙл┐ЛЃл╗ЛЈЛђлйЛќЛѕлИл╣ л▒Лђлхлйл┤ л░л╗л║лЙл│лЙл╗Лј л▓ ЛЂл▓ЛќЛѓЛќ?',\n          rightAnswerId: 2,\n          id: 1,\n          answers: [\n            {text: 'Johnnie Walker', id: 1},\n            {text: 'Smirnoff', id: 2},\n            {text: 'Bacardi', id: 3},\n            {text: 'Absolut', id: 4}\n            ]\n        },\n        {\n          question: 'лаЛќл▓лхлйЛї ЛЂл┐лЙлХлИл▓л░лйлйЛЈ л┐лИл▓л░ л▓ лБл║Лђл░ЛЌлйЛќ лйл░ л┤ЛЃЛѕЛЃ лйл░ЛЂлхл╗лхлйлйЛЈ лил░ ЛђЛќл║?',\n          rightAnswerId: 3,\n          id: 2,\n          answers: [\n            {text: '115 л╗ЛќЛѓЛђЛќл▓', id: 1},\n            {text: '67 л╗ЛќЛѓЛђ', id: 2},\n            {text: '41 л╗ЛќЛѓЛђ', id: 3},\n            {text: '29 л╗ЛќЛѓЛђ', id: 4}\n          ]\n        },\n        {\n          question: 'лАл╝лхЛђЛѓлхл╗Лїлйл░ л┤лЙлил░ л░л╗л║лЙл│лЙл╗Лј л▓ л┐ЛђлЙл╝Лќл╗лх?',\n          rightAnswerId: 1,\n          id: 3,\n          answers: [\n            {text: '5-6 ', id: 1},\n            {text: '4,5', id: 2},\n            {text: '11', id: 3},\n            {text: '7', id: 4}\n          ]\n        },\n        {\n          question: 'лЉл░ЛѓЛїл║Лќл▓ЛЅлИлйл░ ЛђлЙл╝ЛЃ?',\n          rightAnswerId: 4,\n          id: 4,\n          answers: [\n            {text: 'л»л╝л░л╣л║л░', id: 1},\n            {text: 'лєЛЂл┐л░лйЛќЛЈ', id: 2},\n            {text: 'лџлЙл╗лЙл╝лИЛЈ', id: 3},\n            {text: 'лЉл░Лђл▒л░л┤лЙЛЂ', id: 4}\n          ]\n        },\n        {\n          question: 'лџЛќл║лЙ ЛѓЛђлхл▒л░ л▓лИл┐лИЛѓлИ л┐лхЛђлхл┤ л║л░Лђл░лЙл║лх л▓ л┐л░л▒Лќ-34?',\n          rightAnswerId: 3,\n          id: 5,\n          answers: [\n            {text: 'лЏЛќЛѓЛђ л│лЙЛђЛќл▓лхл│лИ', id: 1},\n            {text: '5 л╗ЛќЛѓЛђЛќл▓ лЦл╝Лќл╗ЛїлйлЙл│лЙ л╝ЛќЛєлйлЙл│лЙ', id: 2},\n            {text: 'л» ЛЂЛѓЛќл╗Лїл║лИ лйлх л▓лИл┐\\'Лј', id: 3},\n            {text: 'лњЛЂлх, ЛЅлЙ Лћ л▓ лалхл┐л░л▒л╗Лќл║ЛЃ', id: 4}\n          ]\n        },\n        {\n          question: 'лЦЛѓлЙ л┐лхЛђлхл╝лЙлХлх лйл░ лљл╗л║лЙ-л║л▓ЛќлиЛќ?',\n          rightAnswerId: 4,\n          id: 6,\n          answers: [\n            {text: 'лЌлхл╗лхлйлИл╣ лил╝Лќл╣', id: 1},\n            {text: 'лЏлИЛЂлИл╣ ЛЄЛЃл▓л░л║ лйл░ л▒л░ЛђЛќ', id: 2},\n            {text: 'лЪлхЛЄЛќлйл║л░', id: 3},\n            {text: '7 ЛЁлЙл║л░л│лх', id: 4}\n          ]\n        }\n        ]\n    }\n\n    onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0]\n        if (this.state.answerState[key] === 'success') {\n          return\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion]\n      const results = this.state.results\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) {\n          results[question.id] = 'success'\n        }\n        this.setState({\n          answerState: { [answerId]: 'success' },\n          results\n        })\n\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n             console.log('FINISh')\n            this.setState({\n              isFinished: true\n            })\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            })\n          }\n\n          window.clearTimeout(timeout)\n        }, 1000)\n\n      } else {\n        results[question.id] = 'error'\n        this.setState({\n          answerState: { [answerId]: 'error' },\n          results\n        })\n      }\n    }\n\n  isQuizFinished() {\n      return this.state.activeQuestion + 1 === this.state.quiz.length\n  }\n\n  retryHandler = () => {\n      this.setState({\n        results: {},\n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null\n      })\n  }\n\n    render() {\n        return(\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Alco-quiz</h1>\n                  {\n                    this.state.isFinished\n                      ?  <FinishedQuiz\n                            results={this.state.results}\n                            quiz={this.state.quiz}\n                            onRetry={this.retryHandler}\n                         />\n                      :  <ActiveQuiz\n                            answers={this.state.quiz[this.state.activeQuestion].answers}\n                            question={this.state.quiz[this.state.activeQuestion].question}\n                            onAnswerClick={this.onAnswerClickHandler}\n                            quizLength={this.state.quiz.length}\n                            answerNumber={this.state.activeQuestion + 1}\n                            state={this.state.answerState}\n                         />\n                  }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz","import React from 'react'\nimport './App.css'\nimport Layout from \"./hoc/Layout/Layout\"\nimport Quiz from './containers/Quiz/Quiz'\n\nfunction App() {\n  return (\n      <Layout>\n        <Quiz />\n      </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}